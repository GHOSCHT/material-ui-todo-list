{"version":3,"sources":["components/TodoListItem.tsx","components/TodoList.tsx","InitialTodos.tsx","components/fields/AddTodoField.tsx","components/AddTodoForm.tsx","App.tsx","index.tsx"],"names":["TodoListItem","props","style","color","todo","complete","fontFamily","textDecoration","ListItem","dense","button","onClick","toggleTodo","ListItemIcon","Checkbox","edge","disableRipple","checked","onChange","ListItemText","disableTypography","primary","text","ListItemSecondaryAction","IconButton","aria-label","removeTodo","styles","marginLeft","useStyles","makeStyles","theme","root","width","minWidth","backgroundColor","palette","background","paper","TodoList","classes","List","className","todos","length","map","key","InitialTodos","AddTodoField","placeholder","useField","field","meta","errorText","error","touched","TextField","helperText","AddTodoForm","todoTexts","forEach","push","validationSchema","yup","shape","addTodo","required","notOneOf","max","initialValues","onSubmit","data","resetForm","name","Button","variant","endIcon","Icon","type","hCenterStyle","display","flexDirection","justifyContent","alignItems","centerStyle","padding","margin","height","App","useState","setTodos","Paper","marginTop","minHeight","selectedTodo","updatedTodos","filter","newTodoText","newTodo","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b93f1795.chunk.js","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\ninterface Props {\n  todo: Todo;\n  toggleTodo: ToggleTodo;\n  removeTodo: RemoveTodo;\n}\n\nexport const TodoListItem: React.FC<Props> = (props) => {\n  const style = {\n    color: props.todo.complete ? \"#aaaaaa\" : \"#757575\",\n    fontFamily: \"Roboto\",\n    textDecoration: props.todo.complete ? \"line-through\" : \"none\",\n  };\n\n  return (\n    <ListItem dense button onClick={() => props.toggleTodo(props.todo)}>\n      <ListItemIcon>\n        <Checkbox\n          edge=\"start\"\n          disableRipple\n          checked={props.todo.complete}\n          onChange={() => props.toggleTodo(props.todo)}\n          color=\"primary\"\n        />\n      </ListItemIcon>\n      <ListItemText disableTypography primary={props.todo.text} style={style} />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          aria-label=\"delete\"\n          onClick={() => props.removeTodo(props.todo)}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TodoListItem } from \"./TodoListItem\";\n\ninterface Props {\n  todos: Todo[];\n  toggleTodo: ToggleTodo;\n  removeTodo: RemoveTodo;\n}\n\nconst styles = {\n  marginLeft: \"35px\",\n  color: \"#757575\",\n  fontFamily: \"Roboto\",\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n    minWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const classes = useStyles();\n\n  return (\n    <List className={classes.root}>\n      {props.todos.length === 0 ? (\n        <p style={styles}>Empty</p>\n      ) : (\n        props.todos.map((todo) => {\n          return (\n            <TodoListItem\n              key={todo.text}\n              todo={todo}\n              toggleTodo={props.toggleTodo}\n              removeTodo={props.removeTodo}\n            />\n          );\n        })\n      )}\n    </List>\n  );\n};\n","const InitialTodos: Todo[] = [\n  {\n    text: \"Walk the dog\",\n    complete: false,\n  },\n  {\n    text: \"Write an app\",\n    complete: true,\n  },\n  {\n    text: \"Go to school\",\n    complete: false,\n  },\n  {\n    text: \"Watch Michael Reeves\",\n    complete: true,\n  },\n  {\n    text: \"Add automatic deployment\",\n    complete: true,\n  },\n];\n\nexport default InitialTodos;\n","import React from \"react\";\nimport { FieldAttributes, useField } from \"formik\";\nimport { TextField } from \"@material-ui/core\";\n\nexport const AddTodoField: React.FC<FieldAttributes<{}>> = ({\n  placeholder,\n  ...props\n}) => {\n  const [field, meta] = useField(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n\n  return (\n    <TextField\n      {...field}\n      helperText={errorText}\n      error={!!errorText}\n      placeholder={placeholder}\n    />\n  );\n};\n","import React from \"react\";\nimport { Button, Icon } from \"@material-ui/core\";\nimport { Formik, Form } from \"formik\";\nimport * as yup from \"yup\";\nimport { AddTodoField } from \"./fields/AddTodoField\";\n\ninterface Props {\n  todos: Todo[];\n  addTodo: AddTodo;\n}\n\nexport const AddTodoForm: React.FC<Props> = (props) => {\n  const todoTexts: string[] = [];\n  props.todos.forEach((todo) => {\n    todoTexts.push(todo.text);\n  });\n\n  const itemLenth = 27;\n\n  const validationSchema = yup.object().shape({\n    addTodo: yup\n      .string()\n      .required()\n      .notOneOf(todoTexts, \"Item already exists\")\n      .max(itemLenth, `Use less than ${itemLenth} letters`),\n  });\n\n  return (\n    <Formik\n      initialValues={{ addTodo: \"\" }}\n      onSubmit={(data, { resetForm }) => {\n        props.addTodo(data.addTodo);\n        resetForm();\n      }}\n      validationSchema={validationSchema}\n    >\n      {(props) => (\n        <Form>\n          <AddTodoField placeholder=\"Add new todo item\" name=\"addTodo\" />\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            endIcon={<Icon>send</Icon>}\n            type=\"submit\"\n            style={{ marginLeft: \"15px\" }}\n          >\n            Send\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import React, { CSSProperties, useState } from \"react\";\nimport { TodoList } from \"./components/TodoList\";\nimport InitialTodos from \"./InitialTodos\";\nimport { Paper } from \"@material-ui/core\";\nimport { AddTodoForm } from \"./components/AddTodoForm\";\n\nconst hCenterStyle: CSSProperties = {\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n};\n\nconst centerStyle: CSSProperties = {\n  ...hCenterStyle,\n  padding: 0,\n  margin: 0,\n  width: \"100%\",\n  height: \"100%\",\n};\n\nfunction App() {\n  const [todos, setTodos] = useState(InitialTodos);\n\n  const toggleTodo = (selectedTodo: Todo) => {\n    const updatedTodos = todos.map((todo) => {\n      if (todo === selectedTodo) {\n        return {\n          ...todo,\n          complete: !todo.complete,\n        };\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const removeTodo = (selectedTodo: Todo) => {\n    const updatedTodos = todos.filter((todo) => todo !== selectedTodo);\n    setTodos(updatedTodos);\n  };\n\n  const addTodo = (newTodoText: string) => {\n    const newTodo: Todo = { text: newTodoText, complete: false };\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <div style={hCenterStyle}>\n      <Paper style={{ marginTop: \"30px\", minHeight: \"80px\" }}>\n        <TodoList\n          todos={todos}\n          toggleTodo={toggleTodo}\n          removeTodo={removeTodo}\n        />\n      </Paper>\n      <Paper style={{ marginTop: \"10px\", width: \"360px\", height: \"80px\" }}>\n        <div style={centerStyle}>\n          <AddTodoForm addTodo={addTodo} todos={todos} />\n        </div>\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}